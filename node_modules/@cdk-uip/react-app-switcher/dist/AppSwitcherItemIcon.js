"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _classnames = require("classnames");

var _classnames2 = _interopRequireDefault(_classnames);

var _reactIcon = require("@cdk-uip/react-icon");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Used to wrap an application icon or image ensuring
 * the correct CSS class is injected.
 *
 * To render a CDK icon just pass the icon name, e.g.:
 *
 * ```js
 * <AppSwitcherItemIcon>directions_car</AppSwitcherItemIcon>
 * ```
 *
 * To render an image, pass it as the child:
 *
 * ```js
 * <AppSwitcherItemIcon>
 *   <img src="my_icon" />
 * </AppSwitcherItemIcon>
 * ```
 */
var AppSwitcherItemIcon = function (_React$Component) {
  _inherits(AppSwitcherItemIcon, _React$Component);

  function AppSwitcherItemIcon() {
    _classCallCheck(this, AppSwitcherItemIcon);

    return _possibleConstructorReturn(this, (AppSwitcherItemIcon.__proto__ || Object.getPrototypeOf(AppSwitcherItemIcon)).apply(this, arguments));
  }

  _createClass(AppSwitcherItemIcon, [{
    key: "render",
    value: function render() {
      return _react2.default.Children.map(this.props.children, function (child) {
        if (_react2.default.isValidElement(child)) {
          return _react2.default.cloneElement(child, {
            className: (0, _classnames2.default)("cdk-global-header__app-switcher-apps-icon", child.props.className)
          });
        }
        return _react2.default.createElement(
          _reactIcon.Icon,
          { className: "cdk-global-header__app-switcher-apps-icon" },
          child
        );
      });
    }
  }]);

  return AppSwitcherItemIcon;
}(_react2.default.Component);

exports.default = AppSwitcherItemIcon;