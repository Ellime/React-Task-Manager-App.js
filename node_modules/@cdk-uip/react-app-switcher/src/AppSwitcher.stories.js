import React from "react";
import {
  AppSwitcher,
  AppSwitcherHome,
  AppSwitcherItems,
  AppSwitcherItem,
  AppSwitcherItemIcon,
  AppSwitcherItemText
} from ".";
import { storiesOf } from "@storybook/react";
import { action } from "@storybook/addon-actions";
import { withKnobs, boolean } from "@storybook/addon-knobs";

storiesOf("app-switcher", module)
  .addDecorator(withKnobs)
  .add("controlled", () => {
    class ControlledAppSwitcher extends React.Component {
      state = {
        open: false,
        apps: [
          {
            icon: "contacts",
            label: "Admin"
          },
          {
            icon: "directions_car",
            label: "Vehicle"
          },
          {
            icon: "phone",
            label: "Prospect"
          },
          {
            icon: "assignment",
            label: "Sign"
          },
          {
            icon: "monetization_on",
            label: "Quote Express"
          },
          {
            icon: "folder_shared",
            label: "Consumer"
          }
        ],
        selected: ""
      };

      render() {
        return (
          <div className="mdc-menu-anchor">
            <button
              className="mdc-button"
              onClick={() => this.setState({ open: true })}
            >
              Open
            </button>

            <AppSwitcher
              open={this.state.open}
              onCancel={() => this.setState({ open: false })}
            >
              {boolean("Show home", true) && (
                <AppSwitcherHome
                  onClick={e => {
                    action("clicked home")(e);
                    this.setState({ open: false });
                  }}
                >
                  Back to Connect Portal
                </AppSwitcherHome>
              )}

              <AppSwitcherItems>
                {this.state.apps.map(({ icon, label }, index) => (
                  <AppSwitcherItem
                    key={index}
                    onClick={e => {
                      action("clicked item")(e);
                      this.setState({ open: false, selected: label });
                    }}
                  >
                    <AppSwitcherItemIcon>{icon}</AppSwitcherItemIcon>
                    <AppSwitcherItemText>{label}</AppSwitcherItemText>
                  </AppSwitcherItem>
                ))}
              </AppSwitcherItems>
            </AppSwitcher>

            <p>Last selected app: {this.state.selected}</p>
          </div>
        );
      }
    }
    return <ControlledAppSwitcher />;
  });
