"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _classnames = require("classnames");

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require("prop-types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * * To open/close a bottom sheet simply use the `open` prop to... well open/close it.
 * * The `onClose` prop will be called when the user clicks on the sheet's overlay.
 * * Any content can be rendered inside the component.
 */
var BottomSheet = function (_Component) {
  _inherits(BottomSheet, _Component);

  function BottomSheet() {
    _classCallCheck(this, BottomSheet);

    return _possibleConstructorReturn(this, (BottomSheet.__proto__ || Object.getPrototypeOf(BottomSheet)).apply(this, arguments));
  }

  _createClass(BottomSheet, [{
    key: "onOverlayClick",
    value: function onOverlayClick(event) {
      event.preventDefault();
      this.props.onClose();
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          open = _props.open,
          children = _props.children,
          className = _props.className,
          other = _objectWithoutProperties(_props, ["open", "children", "className"]);

      return _react2.default.createElement(
        "div",
        _extends({
          className: (0, _classnames2.default)("cdk-bottom-sheet", { opened: open }, className),
          onClick: function onClick(e) {
            return _this2.onOverlayClick(e);
          }
        }, other),
        _react2.default.createElement(
          "div",
          {
            className: "cdk-bottom-sheet--content",
            onClick: function onClick(e) {
              return e.stopPropagation();
            } // Clicking on content should not bubble up and close the sheet
          },
          children
        )
      );
    }
  }]);

  return BottomSheet;
}(_react.Component);

BottomSheet.propTypes = {
  /** Gets called when user clicks on overlay */
  onClose: _propTypes.func,
  /** Show/hide sheet based on this prop */
  open: _propTypes.bool
};
BottomSheet.defaultProps = {
  open: false
};
exports.default = BottomSheet;