import React from "react";
import {
  Card,
  CardPrimaryAction,
  CardActions,
  CardActionButtons,
  CardActionButton,
  CardActionIcons,
  CardActionIcon,
  CardActionIconToggle,
  CardHeader,
  CardMedia,
  CardMediaContent,
  CardSubtitle,
  CardText,
  CardTitle
} from ".";
import { Avatar } from "@cdk-uip/react-avatar";
import { Icon } from "@cdk-uip/react-icon";
import { storiesOf } from "@storybook/react";
import { withKnobs, boolean, select } from "@storybook/addon-knobs";
import media from "./16-9.jpg";

storiesOf("card", module)
  .addDecorator(withKnobs)
  .add("props", () => {
    const avatar = boolean("avatar", false);
    const mediaContent = boolean("media content", true);
    return (
      <Card outlined={boolean("outlined", false)} style={{ width: 400 }}>
        <CardPrimaryAction>
          <CardMedia
            style={{ backgroundImage: `url(${media})` }}
            scale={select("media scale", ["square", "16-9"], "16-9")}
          >
            {mediaContent && (
              <CardMediaContent>
                <h3
                  style={{
                    color: "#fff",
                    position: "absolute",
                    left: "1rem",
                    bottom: "1rem",
                    right: "1rem",
                    margin: 0
                  }}
                >
                  Title
                </h3>
              </CardMediaContent>
            )}
          </CardMedia>
          <CardHeader avatar={avatar}>
            {avatar && <Avatar style={{ backgroundColor: "#82c600" }} />}
            <CardTitle large={boolean("large title", true)}>
              Large title
            </CardTitle>
            <CardSubtitle>Subtitle</CardSubtitle>
          </CardHeader>
          <CardText>
            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do
            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim
            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut
            aliquip ex ea commodo consequat.
          </CardText>
        </CardPrimaryAction>
        <CardActions>
          <CardActionButtons>
            <CardActionButton>Action 1</CardActionButton>
            <CardActionButton>Action 2</CardActionButton>
          </CardActionButtons>
          <CardActionIcons>
            <CardActionIconToggle iconOn="favorite" iconOff="favorite_border" />
            <CardActionIcon>share</CardActionIcon>
          </CardActionIcons>
        </CardActions>
        {boolean("full bleed action") && (
          <CardActions fullBleed>
            <CardActionButton>
              Full bleed action
              <Icon>arrow_forward</Icon>
            </CardActionButton>
          </CardActions>
        )}
      </Card>
    );
  });
