import React from "react";
import { Checkbox } from ".";
import { FormField } from "@cdk-uip/react-form-field";
import { storiesOf } from "@storybook/react";
import { action } from "@storybook/addon-actions";
import { withKnobs, text, boolean } from "@storybook/addon-knobs";

storiesOf("checkbox", module)
  .addDecorator(withKnobs)
  .add("props", () => {
    class Controlled extends React.Component {
      state = { checked: false };

      render() {
        const checkbox = (
          <Checkbox
            checked={this.state.checked}
            onChange={e => {
              this.setState(state => ({ checked: !state.checked }));
              action()("onChange", e);
            }}
            disabled={boolean("Disabled", false)}
            indeterminate={boolean("indeterminate", false)}
          />
        );
        const label = text("Label", "");
        if (label) {
          return (
            <FormField id="my-checkbox" alignEnd={boolean("Align end", false)}>
              {checkbox}
              <label>{label}</label>
            </FormField>
          );
        }
        return checkbox;
      }
    }
    return <Controlled />;
  })
  .add("indeterminate", () => {
    class Controlled extends React.Component {
      state = { checked: false, indeterminate: true };

      render() {
        return (
          <FormField id="my-checkbox">
            <Checkbox
              checked={this.state.checked}
              onChange={e => {
                this.setState(state => ({
                  checked: !state.checked,
                  indeterminate: false
                }));
                action()("onChange", e);
              }}
              indeterminate={this.state.indeterminate}
            />
            <label>Label</label>
          </FormField>
        );
      }
    }
    return <Controlled />;
  });
