import React, { Component } from "react";
import TestUtils from "react-dom/test-utils";
import { Chip, ChipContactImage, ChipContactText } from ".";
import renderer from "react-test-renderer";

class Wrapper extends Component {
  render() {
    return <Chip {...this.props} />;
  }
}

it("renders", () => {
  expect(renderer.create(<Chip>Text</Chip>)).toMatchSnapshot();
});

it("renders with a delete button", () => {
  const onClickDelete = jest.fn();
  expect(
    renderer.create(<Chip onClickDelete={onClickDelete}>Text</Chip>)
  ).toMatchSnapshot();
});

it("handles the delete button", () => {
  const onClickDelete = jest.fn();
  const component = TestUtils.renderIntoDocument(
    <Wrapper onClickDelete={onClickDelete}>Text</Wrapper>
  );
  const button = TestUtils.findRenderedDOMComponentWithTag(component, "button");
  TestUtils.Simulate.click(button);
  expect(onClickDelete).toHaveBeenCalled();
});

it("renders with contact text", () => {
  expect(
    renderer.create(
      <Chip
        contact={
          <ChipContactText style={{ backgroundColor: "teal", color: "white" }}>
            A
          </ChipContactText>
        }
      >
        Text
      </Chip>
    )
  ).toMatchSnapshot();
});

it("renders with a contact image", () => {
  expect(
    renderer.create(
      <Chip contact={<ChipContactImage src="filename.jpg" alt="user" />}>
        Text
      </Chip>
    )
  ).toMatchSnapshot();
});

it("renders as a button", () => {
  const onClick = jest.fn();
  expect(
    renderer.create(<Chip onClick={onClick}>Text</Chip>)
  ).toMatchSnapshot();
});

it("handles clicks", () => {
  const onClick = jest.fn();
  const component = TestUtils.renderIntoDocument(
    <Wrapper onClick={onClick}>Text</Wrapper>
  );
  const chip = TestUtils.findRenderedDOMComponentWithClass(
    component,
    "cdk-chip"
  );
  TestUtils.Simulate.click(chip);
  expect(onClick).toHaveBeenCalled();
});
