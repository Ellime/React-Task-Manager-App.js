"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _classnames = require("classnames");

var _classnames2 = _interopRequireDefault(_classnames);

var _ChipIcon = require("./ChipIcon");

var _ChipIcon2 = _interopRequireDefault(_ChipIcon);

var _propTypes = require("prop-types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * used for leading icon in a chip.
 */
var ChipLeadingIcon = function ChipLeadingIcon(_ref) {
  var className = _ref.className,
      hidden = _ref.hidden,
      other = _objectWithoutProperties(_ref, ["className", "hidden"]);

  return _react2.default.createElement(_ChipIcon2.default, _extends({
    className: (0, _classnames2.default)("mdc-chip__icon--leading", { "mdc-chip__icon--leading-hidden": hidden }, className)
  }, other));
};

ChipLeadingIcon.propTypes = {
  /** Hides the leading icon in a filter chip when the chip is selected. */
  hidden: _propTypes.bool
};

exports.default = ChipLeadingIcon;