import React from "react";
import ReactDOM from "react-dom";
import TestUtils from "react-dom/test-utils";
import { IntlProvider } from "react-intl";
import { CurrencyTextField } from ".";

it("renders without crashing", () => {
  const onChange = jest.fn();
  TestUtils.renderIntoDocument(
    <IntlProvider locale="en">
      <CurrencyTextField
        currency="GBP"
        label="Label"
        value={123.45}
        onChange={onChange}
      />
    </IntlProvider>
  );
});

it("handles change", () => {
  const onChange = jest.fn();
  const root = TestUtils.renderIntoDocument(
    <IntlProvider locale="en">
      <CurrencyTextField
        currency="GBP"
        label="Label"
        value={0}
        onChange={onChange}
      />
    </IntlProvider>
  );
  const input = TestUtils.findRenderedDOMComponentWithTag(root, "input");
  TestUtils.Simulate.change(input, { target: { value: "$1,234.56" } });
  expect(onChange).toHaveBeenCalled();
  expect(onChange.mock.calls[0][1]).toBe(1234.56);
});

it("selects text when clicked with the mouse", () => {
  const onChange = jest.fn();
  const root = TestUtils.renderIntoDocument(
    <IntlProvider locale="en">
      <CurrencyTextField
        currency="GBP"
        label="Label"
        value={123.45}
        onChange={onChange}
      />
    </IntlProvider>
  );
  const input = TestUtils.findRenderedDOMComponentWithTag(root, "input");
  TestUtils.Simulate.mouseUp(input);
  expect(input.selectionStart).toBe(0);
  expect(input.selectionEnd).toBe(7);
});

it("handles a prop update", () => {
  const handleChange = jest.fn();
  const div = document.createElement("div");
  ReactDOM.render(
    <IntlProvider locale="en">
      <CurrencyTextField
        currency="GBP"
        label="Label"
        value={0}
        onChange={handleChange}
      />
    </IntlProvider>,
    div
  );
  const component = ReactDOM.render(
    <IntlProvider locale="en">
      <CurrencyTextField
        currency="USD"
        label="Label"
        value={123.45}
        onChange={handleChange}
      />
    </IntlProvider>,
    div
  );
  const input = TestUtils.findRenderedDOMComponentWithTag(component, "input");
  expect(input.value).toBe("$123.45");
});

it("handles a prop update with decimals", () => {
  const handleChange = jest.fn();
  const div = document.createElement("div");
  ReactDOM.render(
    <IntlProvider locale="en">
      <CurrencyTextField
        currency="GBP"
        label="Label"
        value={0}
        onChange={handleChange}
      />
    </IntlProvider>,
    div
  );
  const component = ReactDOM.render(
    <IntlProvider locale="en">
      <CurrencyTextField
        currency="USD"
        label="Label"
        decimalDigits={4}
        value={123.4567}
        onChange={handleChange}
      />
    </IntlProvider>,
    div
  );
  const input = TestUtils.findRenderedDOMComponentWithTag(component, "input");
  expect(input.value).toBe("$123.4567");
});
