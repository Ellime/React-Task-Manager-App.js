"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _classnames = require("classnames");

var _classnames2 = _interopRequireDefault(_classnames);

var _reactButton = require("@cdk-uip/react-button");

var _reactMenu = require("@cdk-uip/react-menu");

var _propTypes = require("prop-types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Display a drop-down allowing the user to select the number of rows per-page.
 *
 * The selection is supplied in the form of `<option>` elements. For example:
 *
 * ```js
 * <DataTablePaginationSelect>
 *   <option value={5}>5</option>
 *   <option value={10}>10</option>
 *   <option value={25}>25</option>
 * </DataTablePaginationSelect>
 * ```
 */
var DataTablePaginationSelect = function (_React$Component) {
  _inherits(DataTablePaginationSelect, _React$Component);

  function DataTablePaginationSelect() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, DataTablePaginationSelect);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DataTablePaginationSelect.__proto__ || Object.getPrototypeOf(DataTablePaginationSelect)).call.apply(_ref, [this].concat(args))), _this), _this.state = { open: false }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(DataTablePaginationSelect, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          className = _props.className,
          label = _props.label,
          value = _props.value,
          onChange = _props.onChange,
          children = _props.children,
          other = _objectWithoutProperties(_props, ["className", "label", "value", "onChange", "children"]);

      var options = _react2.default.Children.toArray(children);
      var values = options.map(function (item) {
        return item.props.value;
      });

      return _react2.default.createElement(
        "div",
        _extends({
          className: (0, _classnames2.default)("cdk-data-table-pagination__select", className)
        }, other),
        _react2.default.createElement(
          "div",
          null,
          label
        ),
        _react2.default.createElement(
          "div",
          { className: "cdk-data-table-pagination__select__surface" },
          _react2.default.createElement(
            _reactButton.Button,
            {
              className: "cdk-data-table-pagination__select__button",
              onClick: function onClick() {
                return _this2.setState({ open: true });
              }
            },
            value
          ),
          _react2.default.createElement(
            _reactMenu.MenuAnchor,
            null,
            _react2.default.createElement(
              _reactMenu.Menu,
              {
                open: this.state.open,
                onCancel: function onCancel() {
                  return _this2.setState({ open: false });
                },
                onSelected: function onSelected(index) {
                  _this2.setState({ open: false });
                  onChange && onChange(values[index]);
                }
              },
              options.map(function (child, index) {
                return _react2.default.createElement(
                  _reactMenu.MenuItem,
                  { key: index, id: child.props.value },
                  child.props.children
                );
              })
            )
          )
        )
      );
    }
  }]);

  return DataTablePaginationSelect;
}(_react2.default.Component);

DataTablePaginationSelect.propTypes = {
  /** The drop-down label (e.g. "Rows per-page:") */
  label: _propTypes.node,
  /** The currently selected value */
  value: (0, _propTypes.oneOfType)([_propTypes.string, _propTypes.number]),
  /** Called with the new value when the selection has changed. */
  onChange: _propTypes.func
};
exports.default = DataTablePaginationSelect;