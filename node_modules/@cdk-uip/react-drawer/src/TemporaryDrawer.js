import React from "react";
import classnames from "classnames";
import { MDCTemporaryDrawer } from "@material/drawer/dist/mdc.drawer";

/**
 * Temporary drawer that slides in from the side.
 */
class TemporaryDrawer extends React.Component {
  componentDidMount() {
    if (this.drawer) {
      // Fix for MDCTemporaryDrawer click handling
      // https://github.com/material-components/material-components-web/issues/1004
      if (!MDCTemporaryDrawer.prototype.getDefaultFoundation_) {
        MDCTemporaryDrawer.prototype.getDefaultFoundation_ =
          MDCTemporaryDrawer.prototype.getDefaultFoundation;
        MDCTemporaryDrawer.prototype.getDefaultFoundation = function() {
          const foundation = this.getDefaultFoundation_();

          foundation.drawerClickHandler_ = e => {
            if (e.target.tagName !== "A") {
              e.stopPropagation();
            }
          };

          return foundation;
        };
      }

      this.MDCComponent = new MDCTemporaryDrawer(this.drawer);
      this.MDCComponent.listen("MDCTemporaryDrawer:close", this.onClose);
    }
  }

  componentWillUnmount() {
    if (this.MDCComponent) {
      this.MDCComponent.unlisten("MDCTemporaryDrawer:close", this.onClose);
      this.MDCComponent.destroy();
    }
  }

  componentDidUpdate(prevProps) {
    if (this.props.open !== prevProps.open) {
      this.MDCComponent.open = this.props.open;
    }
  }

  onClose = () => {
    // Don't send the event immediately as the drawer may still
    // be closing and if it is a controlled component then we may
    // end up with multiple close events being sent.
    setTimeout(() => {
      this.props.onClose && this.props.onClose();
    }, 0);
  };

  render() {
    const { className, children, onClose, ...other } = this.props;
    return (
      <aside
        className={classnames(
          "mdc-drawer",
          "mdc-drawer--temporary",
          "mdc-typography",
          className
        )}
        ref={drawer => {
          this.drawer = drawer;
        }}
        {...other}
      >
        <nav className="mdc-drawer__drawer">{this.props.children}</nav>
      </aside>
    );
  }
}

export default TemporaryDrawer;
