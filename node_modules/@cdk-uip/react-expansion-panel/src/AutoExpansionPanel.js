import React, { Children, cloneElement } from "react";
import classnames from "classnames";
import ExpansionPanelHeader from "./ExpansionPanelHeader";
import ExpansionPanelContent from "./ExpansionPanelContent";
import { bool } from "prop-types";

/**
 * Used to create a panel within an `<AutoExpansionPanelGroup>`
 */
const AutoExpansionPanel = ({
  className,
  expanded,
  onClick,
  panelId,
  children,
  ...other
}) => (
  <div
    className={classnames(
      "cdk-expansion-panel",
      { "cdk-expansion-panel--expanded": expanded },
      className
    )}
    {...other}
  >
    {Children.map(children, child => {
      if (child.type === ExpansionPanelHeader) {
        return cloneElement(child, {
          onClick: e => {
            onClick(panelId);
            child.props.onClick && child.props.onClick(e);
          }
        });
      }
      if (child.type === ExpansionPanelContent) {
        return cloneElement(child, { expanded });
      }
      return child;
    })}
  </div>
);

AutoExpansionPanel.propTypes = {
  /** Panel is expanded. */
  expanded: bool
};

export default AutoExpansionPanel;
