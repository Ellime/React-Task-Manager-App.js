import React from "react";
import classnames from "classnames";
import { number, oneOfType, string } from "prop-types";

/**
 * Use to wrap the content of an `<ExpansionPanel>`. The content may
 * include `<ExpansionPanelContentBody>` and `<ExpansionPanelContentActions>`.
 */
class ExpansionPanelContent extends React.Component {
  static propTypes = {
    /**
     * When the content is expanded the height is adjusted to take the
     * content into account. If you want to override this then specify
     * a suitable height either in pixels or a CSS value such as "auto".
     */
    expandedHeight: oneOfType([number, string])
  };

  state = { height: undefined };

  componentDidMount() {
    this.setHeight(this.props.expanded);
  }

  componentDidUpdate(prevProps) {
    if (this.props.expanded !== prevProps.expanded) {
      this.setHeight(this.props.expanded);
    }
  }

  setHeight(expanded) {
    if (this.content) {
      const { expandedHeight } = this.props;
      this.setState({
        height: expanded
          ? typeof expandedHeight !== "undefined"
            ? expandedHeight
            : this.content.scrollHeight
          : 0
      });
    }
  }

  render() {
    const {
      className,
      expanded,
      style,
      expandedHeight,
      children,
      ...other
    } = this.props;
    return (
      <div
        className={classnames("cdk-expansion-panel__content", className)}
        ref={content => {
          this.content = content;
        }}
        style={{
          height: this.state.height,
          ...style
        }}
        {...other}
      >
        {children}
      </div>
    );
  }
}

export default ExpansionPanelContent;
