import React from "react";
import classnames from "classnames";
import { oneOf } from "prop-types";

/**
 * A fluid row layout container.
 *
 * Compared to `LayoutGrid`, which is a grid where each cell is equal width, the width of each `FluidItem` is based on their content. `LayoutGrid` sets the size for each cell which is great for instance for laying out cards into equal width columns. However, having to decide the number of columns is not practical if the content already has the right width. In that case you can use `Fluid` to just lay that content out in row using the provided horizontal and vertical alignment properties.
 *
 * Note: Like `LayoutGrid` this is just a layout utility and does not add anything visual.
 */
const Fluid = ({ wrap, halign, valign, className, children, ...other }) => {
  return (
    <div
      className={classnames(
        "cdk-fluid",
        {
          [`cdk-fluid--wrap-${wrap}`]: wrap,
          [`cdk-fluid--halign-${halign}`]: halign,
          [`cdk-fluid--valign-${valign}`]: valign
        },
        className
      )}
      {...other}
    >
      {children}
    </div>
  );
};

Fluid.propTypes = {
  /** Specifies how to handle items when the items inside are wider than the container. Default value is `content`. */
  wrap: oneOf(["content", "items", "nowrap"]),
  /** Horizontal alignment of the items. Default value is `stretch`. */
  halign: oneOf(["stretch", "left", "center", "right"]),
  /** Vertical alignment of the items. Default value is `stretch`. */
  valign: oneOf(["stretch", "top", "middle", "bottom"])
};

export default Fluid;
