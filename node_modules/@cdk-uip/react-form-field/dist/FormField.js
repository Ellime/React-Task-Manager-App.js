"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _classnames = require("classnames");

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require("prop-types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * Used to add labels to input controls.
 * You need to supply two child elements: an input and a label.
 * The ID will be injected into the child elements.
 */
var FormField = function FormField(_ref) {
  var id = _ref.id,
      className = _ref.className,
      alignEnd = _ref.alignEnd,
      children = _ref.children,
      other = _objectWithoutProperties(_ref, ["id", "className", "alignEnd", "children"]);

  return _react2.default.createElement(
    "div",
    _extends({
      className: (0, _classnames2.default)("mdc-form-field", {
        "mdc-form-field--align-end": alignEnd
      }, className)
    }, other),
    _react.Children.map(children, function (child) {
      if (child === null) {
        return null;
      }
      if (child.type === "label") {
        // Inject "for" into the label element
        return (0, _react.cloneElement)(child, { htmlFor: id });
      }
      // Inject the id
      // Assume this is the input element
      return (0, _react.cloneElement)(child, { id: id });
    })
  );
};

FormField.propTypes = {
  /** The id */
  id: _propTypes.string.isRequired,
  /** Left-aligned label */
  alignEnd: _propTypes.bool
};

exports.default = FormField;