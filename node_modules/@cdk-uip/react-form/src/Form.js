import React from "react";
import { func } from "prop-types";

/**
 * Simple form with HTML5 `checkValidity` support.
 *
 * Supply an `onSubmit` prop and include a submit button. When the button
 * is clicked or `<Enter>` is pressed the `onSubmit` function is called if
 * all `TextField` components on the form are valid.
 *
 * If any `TextField` components are invalid then they will be displayed in their
 * error state and `onSubmit` will not be called.
 */
export default class Form extends React.Component {
  static propTypes = {
    /** Called when submitting the form if all `TextField` components are valid */
    onSubmit: func.isRequired,
    /** Called when any of the form's fields are invalid */
    onInvalid: func
  };

  static defaultProps = {
    onInvalid: () => ({})
  };

  onSubmit = e => {
    e.preventDefault();
    if (e.target.checkValidity()) {
      this.props.onSubmit(e);
    }
  };

  onInvalid = e => {
    e.preventDefault();
    // Something is not right, execute onInvalid callback
    this.props.onInvalid(e);

    // Mark as invalid if this is a TextField
    if (e.target.classList.contains("mdc-text-field__input")) {
      e.target.parentNode.classList.add("mdc-text-field--invalid");
    }
  };

  render() {
    return (
      <form
        noValidate
        onSubmit={this.onSubmit}
        onInvalid={this.onInvalid}
        className={this.props.className}
      >
        {this.props.children}
      </form>
    );
  }
}
