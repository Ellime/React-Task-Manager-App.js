"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _ = require(".");

var _propTypes = require("prop-types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var linkProps = function linkProps(handleClick) {
  return {
    element: "a",
    href: "#",
    onClick: function onClick(e) {
      e.preventDefault();
      handleClick(e);
    }
  };
};

/**
 * Render a CDK global header to GUS 2.0 standards. Includes the CDK
 * logo and your application name.
 *
 * ```js
 * <CDKGlobalHeader appName="My App" />
 * ```
 *
 * You can render additional icons on the right-hand side by supplying
 * a `GlobalHeaderIcons` component as the child which contains your icons.
 *
 * For example:
 *
 * ```js
 * <CDKGlobalHeader appName="My App">
 *   <GlobalHeaderIcons>
 *     <GlobalHeaderIcon>settings</GlobalHeaderIcon>
 *     <GlobalHeaderIcon>help</GlobalHeaderIcon>
 *   </GlobalHeaderIcons>
 * </CDKGlobalHeader>
 * ```
 */
var CDKGlobalHeader = function CDKGlobalHeader(_ref) {
  var appName = _ref.appName,
      brand = _ref.brand,
      fixed = _ref.fixed,
      adjust = _ref.adjust,
      menu = _ref.menu,
      onClickMenu = _ref.onClickMenu,
      onClickLogo = _ref.onClickLogo,
      children = _ref.children;
  return (
    // <header className="mdc-top-app-bar mdc-top-app-bar--dense mdc-top-app-bar--fixed mdc-top-app-bar--fixed-scrolled">
    //   <div className="mdc-top-app-bar__row">
    //     <section
    //       className="mdc-top-app-bar__section mdc-top-app-bar__section--align-start"
    //       style={{
    //         borderRight: "1px solid rgba(255, 255, 255, 0.5)",
    //         flexGrow: 0
    //       }}
    //     >
    //       <span
    //         style={{
    //           width: 150,
    //           height: 16,
    //           paddingLeft: 16,
    //           paddingRight: 16
    //         }}
    //       >
    //         <CDKLogo />
    //       </span>
    //     </section>

    //     <section className="mdc-top-app-bar__section mdc-top-app-bar__section--align-start">
    //       <span className="mdc-top-app-bar__title">{appName}</span>
    //     </section>
    //   </div>
    // </header>

    _react2.default.createElement(
      _.GlobalHeader,
      { fixed: fixed, adjust: adjust },
      _react2.default.createElement(
        _.GlobalHeaderSection,
        { align: "start" },
        menu && _react2.default.createElement(
          _.GlobalHeaderMenu,
          null,
          _react2.default.createElement(_.GlobalHeaderMenuIcon, onClickMenu ? Object.assign({}, linkProps(onClickMenu)) : {})
        ),
        _react2.default.createElement(
          _.GlobalHeaderLogo,
          onClickLogo ? Object.assign({}, linkProps(onClickLogo)) : {},
          _react2.default.createElement(
            _.GlobalHeaderLogoImage,
            null,
            _react2.default.createElement(_.CDKLogo, null)
          )
        ),
        _react2.default.createElement(
          _.GlobalHeaderLabel,
          null,
          _react2.default.createElement(
            _.GlobalHeaderLabelBrand,
            null,
            brand
          ),
          _react2.default.createElement(
            _.GlobalHeaderLabelAppName,
            null,
            appName
          )
        )
      ),
      children
    )
  );
};

CDKGlobalHeader.propTypes = {
  /** Fix the header to the top of the page */
  fixed: _propTypes.bool,
  /** Adjust content to take a fixed toolbar into account */
  adjust: _propTypes.bool,
  /** The brand name */
  brand: _propTypes.string,
  /** The application name */
  appName: _propTypes.string,
  /** Specify a function to be called when the logo is clicked. */
  onClickLogo: _propTypes.func,
  /** Show the hamburger menu icon on mobile */
  menu: _propTypes.bool,
  /** Specify a function to be called when the hamburger menu icon is clicked. */
  onClickMenu: _propTypes.func
};

CDKGlobalHeader.defaultProps = {
  brand: "CDK",
  menu: true
};

exports.default = CDKGlobalHeader;