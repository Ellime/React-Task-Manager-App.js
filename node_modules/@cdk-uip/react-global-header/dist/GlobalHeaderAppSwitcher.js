"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _GlobalHeaderIcon = require("./GlobalHeaderIcon");

var _GlobalHeaderIcon2 = _interopRequireDefault(_GlobalHeaderIcon);

var _reactAppSwitcher = require("@cdk-uip/react-app-switcher");

var _propTypes = require("prop-types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * High-level component that includes an app switcher in a global header
 * using the correct icon.
 */
var GlobalHeaderAppSwitcher = function (_React$Component) {
  _inherits(GlobalHeaderAppSwitcher, _React$Component);

  function GlobalHeaderAppSwitcher() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, GlobalHeaderAppSwitcher);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = GlobalHeaderAppSwitcher.__proto__ || Object.getPrototypeOf(GlobalHeaderAppSwitcher)).call.apply(_ref, [this].concat(args))), _this), _this.state = { open: false }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(GlobalHeaderAppSwitcher, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          home = _props.home,
          onHome = _props.onHome,
          children = _props.children;


      return _react2.default.createElement(
        _react.Fragment,
        null,
        _react2.default.createElement(
          _GlobalHeaderIcon2.default,
          {
            element: "span",
            className: "mdc-menu-anchor",
            onClick: function onClick() {
              return _this2.setState({ open: true });
            }
          },
          "apps"
        ),
        _react2.default.createElement(
          _reactAppSwitcher.AppSwitcher,
          {
            open: this.state.open,
            onCancel: function onCancel() {
              return _this2.setState({ open: false });
            }
          },
          home && _react2.default.createElement(
            _reactAppSwitcher.AppSwitcherHome,
            {
              onClick: function onClick(e) {
                e.stopPropagation();
                _this2.setState({ open: false });
                onHome && onHome(e);
              }
            },
            home
          ),
          _react2.default.createElement(
            _reactAppSwitcher.AppSwitcherItems,
            null,
            _react2.default.Children.map(children, function (app) {
              return _react2.default.cloneElement(app, {
                onClick: function onClick(e) {
                  e.stopPropagation();
                  _this2.setState({ open: false });
                  app.props.onClick && app.props.onClick(e);
                }
              });
            })
          )
        )
      );
    }
  }]);

  return GlobalHeaderAppSwitcher;
}(_react2.default.Component);

GlobalHeaderAppSwitcher.propTypes = {
  /**
   * Use this to display an optional caption that be clicked on to back
   * to your home page/portal.
   */
  home: _propTypes.node,
  /**
   * Called when the home caption is clicked.
   */
  onHome: _propTypes.func
};
exports.default = GlobalHeaderAppSwitcher;