"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _classnames = require("classnames");

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require("prop-types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * Used to render the main image in the CDK global header.
 *
 * To render a clickable header, specify `a` as the `element`
 * prop:
 *
 * ```js
 * <GlobalHeaderLogo element="a" href="/my-home-url">
 *   ...
 * </GlobalHeaderLogo>
 * ```
 */
var GlobalHeaderLogo = function GlobalHeaderLogo(_ref) {
  var element = _ref.element,
      className = _ref.className,
      other = _objectWithoutProperties(_ref, ["element", "className"]);

  var T = element;
  return _react2.default.createElement(T, _extends({
    className: (0, _classnames2.default)("cdk-global-header__logo", className)
  }, other));
};

GlobalHeaderLogo.propTypes = {
  /**
   * The type of element to use. For a clicable logo you
   * can use an `a`.
   */
  element: _propTypes.string
};

GlobalHeaderLogo.defaultProps = {
  element: "div"
};

exports.default = GlobalHeaderLogo;