import React from "react";
import {
  GlobalHeader,
  GlobalHeaderSection,
  GlobalHeaderLogo,
  GlobalHeaderLogoImage,
  GlobalHeaderMenu,
  GlobalHeaderMenuIcon,
  GlobalHeaderLabel,
  GlobalHeaderLabelBrand,
  GlobalHeaderLabelAppName,
  CDKLogo
} from ".";
import { bool, func, string } from "prop-types";

const linkProps = handleClick => ({
  element: "a",
  href: "#",
  onClick: e => {
    e.preventDefault();
    handleClick(e);
  }
});

/**
 * Render a CDK global header to GUS 2.0 standards. Includes the CDK
 * logo and your application name.
 *
 * ```js
 * <CDKGlobalHeader appName="My App" />
 * ```
 *
 * You can render additional icons on the right-hand side by supplying
 * a `GlobalHeaderIcons` component as the child which contains your icons.
 *
 * For example:
 *
 * ```js
 * <CDKGlobalHeader appName="My App">
 *   <GlobalHeaderIcons>
 *     <GlobalHeaderIcon>settings</GlobalHeaderIcon>
 *     <GlobalHeaderIcon>help</GlobalHeaderIcon>
 *   </GlobalHeaderIcons>
 * </CDKGlobalHeader>
 * ```
 */
const CDKGlobalHeader = ({
  appName,
  brand,
  fixed,
  adjust,
  menu,
  onClickMenu,
  onClickLogo,
  children
}) => (
  // <header className="mdc-top-app-bar mdc-top-app-bar--dense mdc-top-app-bar--fixed mdc-top-app-bar--fixed-scrolled">
  //   <div className="mdc-top-app-bar__row">
  //     <section
  //       className="mdc-top-app-bar__section mdc-top-app-bar__section--align-start"
  //       style={{
  //         borderRight: "1px solid rgba(255, 255, 255, 0.5)",
  //         flexGrow: 0
  //       }}
  //     >
  //       <span
  //         style={{
  //           width: 150,
  //           height: 16,
  //           paddingLeft: 16,
  //           paddingRight: 16
  //         }}
  //       >
  //         <CDKLogo />
  //       </span>
  //     </section>

  //     <section className="mdc-top-app-bar__section mdc-top-app-bar__section--align-start">
  //       <span className="mdc-top-app-bar__title">{appName}</span>
  //     </section>
  //   </div>
  // </header>

  <GlobalHeader fixed={fixed} adjust={adjust}>
    <GlobalHeaderSection align="start">
      {menu && (
        <GlobalHeaderMenu>
          <GlobalHeaderMenuIcon
            {...(onClickMenu ? { ...linkProps(onClickMenu) } : {})}
          />
        </GlobalHeaderMenu>
      )}

      <GlobalHeaderLogo {...(onClickLogo ? { ...linkProps(onClickLogo) } : {})}>
        <GlobalHeaderLogoImage>
          <CDKLogo />
        </GlobalHeaderLogoImage>
      </GlobalHeaderLogo>

      <GlobalHeaderLabel>
        <GlobalHeaderLabelBrand>{brand}</GlobalHeaderLabelBrand>
        <GlobalHeaderLabelAppName>{appName}</GlobalHeaderLabelAppName>
      </GlobalHeaderLabel>
    </GlobalHeaderSection>

    {children}
  </GlobalHeader>
);

CDKGlobalHeader.propTypes = {
  /** Fix the header to the top of the page */
  fixed: bool,
  /** Adjust content to take a fixed toolbar into account */
  adjust: bool,
  /** The brand name */
  brand: string,
  /** The application name */
  appName: string,
  /** Specify a function to be called when the logo is clicked. */
  onClickLogo: func,
  /** Show the hamburger menu icon on mobile */
  menu: bool,
  /** Specify a function to be called when the hamburger menu icon is clicked. */
  onClickMenu: func
};

CDKGlobalHeader.defaultProps = {
  brand: "CDK",
  menu: true
};

export default CDKGlobalHeader;
