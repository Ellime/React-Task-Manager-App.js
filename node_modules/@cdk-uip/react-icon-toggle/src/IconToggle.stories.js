import React, { Component, Fragment } from "react";
import { IconToggle } from ".";
import { Button } from "@cdk-uip/react-button";
import { storiesOf } from "@storybook/react";
import { action } from "@storybook/addon-actions";
import { withKnobs, boolean, select } from "@storybook/addon-knobs";

storiesOf("icon-toggle", module)
  .addDecorator(withKnobs)
  .add("props", () => {
    class Wrapper extends Component {
      state = { on: this.props.initialState };
      render() {
        const type = select("type", ["Normal", "Primary", "Accent"], "Normal");
        return (
          <Fragment>
            <IconToggle
              primary={type === "Primary"}
              accent={type === "Accent"}
              disabled={boolean("disabled", false)}
              iconOn="favorite"
              iconOff="favorite_border"
              onChange={on => {
                this.setState({ on });
                action()("onChange", on);
              }}
              on={this.state.on}
            />
            <Button
              onClick={() => {
                this.setState(state => ({ on: !state.on }));
              }}
            >
              Toggle
            </Button>
            <p>Current state: {this.state.on ? "on" : "off"}</p>
          </Fragment>
        );
      }
    }
    return <Wrapper initialState={boolean("initial state", false)} />;
  })
  .add("Controlled", () => {
    class Wrapper extends React.Component {
      state = { on: false };
      render() {
        return (
          <IconToggle
            on={this.state.on}
            iconOn="favorite"
            iconOff="favorite_border"
            onChange={on => {
              this.setState({ on });
              action()("onChange", on);
            }}
          />
        );
      }
    }
    return <Wrapper />;
  });
