import React from "react";
import ReactDOM from "react-dom";
import TestUtils from "react-dom/test-utils";
import { IconToggle } from ".";
import renderer from "react-test-renderer";

it("renders", () => {
  expect(
    renderer.create(<IconToggle iconOn="favorite" iconOff="favorite_border" />)
  ).toMatchSnapshot();
});

it("renders on", () => {
  expect(
    renderer.create(
      <IconToggle on iconOn="favorite" iconOff="favorite_border" />
    )
  ).toMatchSnapshot();
});

it("renders primary", () => {
  expect(
    renderer.create(
      <IconToggle primary iconOn="favorite" iconOff="favorite_border" />
    )
  ).toMatchSnapshot();
});

it("renders accent", () => {
  expect(
    renderer.create(
      <IconToggle accent iconOn="favorite" iconOff="favorite_border" />
    )
  ).toMatchSnapshot();
});

it("renders disabled", () => {
  expect(
    renderer.create(
      <IconToggle disabled iconOn="favorite" iconOff="favorite_border" />
    )
  ).toMatchSnapshot();
});

it("mounts and unmounts", () => {
  const div = document.createElement("div");
  ReactDOM.render(
    <IconToggle on iconOn="favorite" iconOff="favorite_border" />,
    div
  );
  ReactDOM.render(
    <IconToggle on={false} iconOn="favorite" iconOff="favorite_border" />,
    div
  );
  ReactDOM.unmountComponentAtNode(div);
});

it("handles onChange", () => {
  const handleChange = jest.fn();
  const component = TestUtils.renderIntoDocument(
    <IconToggle onChange={handleChange} />
  );
  const icon = TestUtils.findRenderedDOMComponentWithClass(
    component,
    "mdc-icon-toggle"
  );
  TestUtils.Simulate.click(icon);
  expect(handleChange).toHaveBeenCalled();
});
