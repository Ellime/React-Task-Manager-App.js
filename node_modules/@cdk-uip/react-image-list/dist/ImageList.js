"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _classnames = require("classnames");

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * An Image List consists of several items, each containing an image and optionally
 * supporting content (i.e. a text label).
 */
var ImageList = function ImageList(_ref) {
  var className = _ref.className,
      columns = _ref.columns,
      gutter = _ref.gutter,
      textProtection = _ref.textProtection,
      children = _ref.children,
      other = _objectWithoutProperties(_ref, ["className", "columns", "gutter", "textProtection", "children"]);

  return _react2.default.createElement(
    "ul",
    _extends({
      className: (0, _classnames2.default)("mdc-image-list", { "mdc-image-list--with-text-protection": textProtection }, className)
    }, other),
    _react.Children.map(children, function (child) {
      return (0, _react.cloneElement)(child, { columns: columns, gutter: gutter });
    })
  );
};

ImageList.propTypes = {
  /** The number of columns */
  columns: _propTypes2.default.number,
  /** The gutter size */
  gutter: _propTypes2.default.number,
  /**
   * Indicates that supporting content should be positioned in a scrim overlaying
   * each image (instead of positioned separately under each image)
   */
  textProtection: _propTypes2.default.bool
};

ImageList.defaultProps = {
  columns: 5,
  gutter: 4
};

exports.default = ImageList;