import React from "react";
import { LayoutGrid, LayoutGridCell } from ".";
import { storiesOf } from "@storybook/react";
import "./demo.css";

storiesOf("layout-grid", module)
  .add("Basic", () => (
    <LayoutGrid className="demo-grid">
      <LayoutGridCell className="demo-cell" span={4} />
      <LayoutGridCell className="demo-cell" span={4} />
      <LayoutGridCell className="demo-cell" span={4} />
    </LayoutGrid>
  ))
  .add("Grid of default wide (4 columns) items", () => (
    <LayoutGrid className="demo-grid">
      <LayoutGridCell className="demo-cell">4</LayoutGridCell>
      <LayoutGridCell className="demo-cell">4</LayoutGridCell>
      <LayoutGridCell className="demo-cell">4</LayoutGridCell>
    </LayoutGrid>
  ))
  .add("Grid of 1 column wide items", () => (
    <LayoutGrid className="demo-grid">
      {[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].map((e, i) => (
        <LayoutGridCell key={i} className="demo-cell" span={e}>
          {e}
        </LayoutGridCell>
      ))}
    </LayoutGrid>
  ))
  .add("Grid of differently sized items", () => (
    <LayoutGrid className="demo-grid">
      <LayoutGridCell className="demo-cell" span={6}>
        6
      </LayoutGridCell>
      <LayoutGridCell className="demo-cell" span={4}>
        4
      </LayoutGridCell>
      <LayoutGridCell className="demo-cell" span={2}>
        2
      </LayoutGridCell>
    </LayoutGrid>
  ))
  .add("Grid of items with tweaks at different screen sizes", () => (
    <LayoutGrid className="demo-grid">
      <LayoutGridCell className="demo-cell" span={6} spanTablet={8}>
        6 (8 tablet)
      </LayoutGridCell>
      <LayoutGridCell className="demo-cell" span={4} spanTablet={6}>
        4 (6 tablet)
      </LayoutGridCell>
      <LayoutGridCell className="demo-cell" span={2} spanPhone={4}>
        2 (4 phone)
      </LayoutGridCell>
    </LayoutGrid>
  ))
  .add(
    "Grid with a single row of items with tweaks at different screen sizes",
    () => (
      <LayoutGrid className="demo-grid">
        <LayoutGridCell
          className="demo-cell"
          spanDesktop={6}
          spanTablet={4}
          spanPhone={2}
        >
          6 desktop, 8 tablet, 2 phone
        </LayoutGridCell>
        <LayoutGridCell
          className="demo-cell"
          spanDesktop={6}
          spanTablet={4}
          spanPhone={2}
        >
          6 desktop, 8 tablet, 2 phone
        </LayoutGridCell>
      </LayoutGrid>
    )
  )
  .add("Grid nested within parent grid cell", () => (
    <LayoutGrid className="demo-grid">
      <LayoutGridCell className="demo-parent-cell" span={4}>
        <LayoutGrid nested>
          <LayoutGridCell className="demo-child-cell demo-cell">
            <span>Child 4</span>
          </LayoutGridCell>
          <LayoutGridCell className="demo-child-cell demo-cell">
            <span>Child 4</span>
          </LayoutGridCell>
          <LayoutGridCell className="demo-child-cell demo-cell">
            <span>Child 4</span>
          </LayoutGridCell>
        </LayoutGrid>
        <span>Parent 4</span>
      </LayoutGridCell>
      <LayoutGridCell className="demo-cell" span={4}>
        4
      </LayoutGridCell>
      <LayoutGridCell className="demo-cell" span={4}>
        4
      </LayoutGridCell>
    </LayoutGrid>
  ))
  .add("Grid with max width (1280px) and center alignment by default", () => (
    <LayoutGrid className="demo-grid max-width">
      <LayoutGridCell className="demo-cell" span={4} />
      <LayoutGridCell className="demo-cell" span={4} />
      <LayoutGridCell className="demo-cell" span={4} />
    </LayoutGrid>
  ))
  .add("Grid with max width (1280px) and left alignment", () => (
    <LayoutGrid className="demo-grid max-width" align="left">
      <LayoutGridCell className="demo-cell" span={4} />
      <LayoutGridCell className="demo-cell" span={4} />
      <LayoutGridCell className="demo-cell" span={4} />
    </LayoutGrid>
  ))
  .add("Fixed column width layout grid and center alignment by default", () => (
    <LayoutGrid className="demo-grid" fixedColumnWidth>
      <LayoutGridCell className="demo-cell" span={1} />
      <LayoutGridCell className="demo-cell" span={1} />
      <LayoutGridCell className="demo-cell" span={1} />
    </LayoutGrid>
  ))
  .add("Fixed column width layout grid and right alignment", () => (
    <LayoutGrid className="demo-grid" fixedColumnWidth align="right">
      <LayoutGridCell className="demo-cell" span={1} />
      <LayoutGridCell className="demo-cell" span={1} />
      <LayoutGridCell className="demo-cell" span={1} />
    </LayoutGrid>
  ));
