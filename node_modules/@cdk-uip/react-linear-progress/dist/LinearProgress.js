"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _classnames = require("classnames");

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require("prop-types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var scale = function scale(scaleValue) {
  var value = "scaleX(" + scaleValue + ")";
  return {
    transform: value,
    WebkitTransform: value,
    MozTransform: value,
    OTransform: value,
    MSTransform: value
  };
};

var LinearProgress = function LinearProgress(_ref) {
  var indeterminate = _ref.indeterminate,
      reversed = _ref.reversed,
      className = _ref.className,
      progress = _ref.progress,
      closed = _ref.closed,
      buffer = _ref.buffer,
      other = _objectWithoutProperties(_ref, ["indeterminate", "reversed", "className", "progress", "closed", "buffer"]);

  return _react2.default.createElement(
    "div",
    _extends({
      role: "progressbar",
      className: (0, _classnames2.default)("mdc-linear-progress", {
        "mdc-linear-progress--indeterminate": indeterminate,
        "mdc-linear-progress--reversed": reversed,
        "mdc-linear-progress--closed": closed
      }, className)
    }, other),
    _react2.default.createElement("div", { className: "mdc-linear-progress__buffering-dots" }),
    _react2.default.createElement("div", {
      className: "mdc-linear-progress__buffer",
      style: scale(indeterminate ? 1 : buffer || 1)
    }),
    _react2.default.createElement(
      "div",
      {
        className: "mdc-linear-progress__bar mdc-linear-progress__primary-bar",
        style: scale(indeterminate ? 1 : progress)
      },
      _react2.default.createElement("span", { className: "mdc-linear-progress__bar-inner" })
    ),
    _react2.default.createElement(
      "div",
      { className: "mdc-linear-progress__bar mdc-linear-progress__secondary-bar" },
      _react2.default.createElement("span", { className: "mdc-linear-progress__bar-inner" })
    )
  );
};

LinearProgress.propTypes = {
  /** Enable if you do not know how long the process will take */
  indeterminate: _propTypes.bool,
  /** Reverse the direction of the progress bar */
  reversed: _propTypes.bool,
  /** The current progress value (between 0 and 1) */
  progress: _propTypes.number,
  /** Hides the linear progress indicator */
  closed: _propTypes.bool,
  /** Current buffer value (between 0 and 1) */
  buffer: _propTypes.number
};

LinearProgress.defaultProps = {
  progress: 0
};

exports.default = LinearProgress;