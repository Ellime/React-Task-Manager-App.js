"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _classnames = require("classnames");

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require("prop-types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * Generic list component. Used to render read-only or interactive lists. Interactive lists have ripple
 * effects applied for supported browsers when an item is clicked on. Lists can contain single or multiple
 * lines of text with optional icons. You can use `ListGroup` components to divide lists into groups and
 * `ListDivider` components to separate list items.
 */
var List = function List(_ref) {
  var interactive = _ref.interactive,
      dense = _ref.dense,
      multiLine = _ref.multiLine,
      avatar = _ref.avatar,
      className = _ref.className,
      nonInteractive = _ref.nonInteractive,
      children = _ref.children,
      other = _objectWithoutProperties(_ref, ["interactive", "dense", "multiLine", "avatar", "className", "nonInteractive", "children"]);

  var T = interactive ? "nav" : "ul";
  return _react2.default.createElement(
    T,
    _extends({
      className: (0, _classnames2.default)("mdc-list", {
        "mdc-list--dense": dense,
        "mdc-list--two-line": multiLine,
        "mdc-list--avatar-list": avatar,
        "mdc-list--non-interactive": nonInteractive
      }, className)
    }, other),
    children
  );
};

List.propTypes = {
  /**
   * Enable if the list contains links
   *
   * @ignore
   */
  interactive: _propTypes.bool,
  /** Compact list */
  dense: _propTypes.bool,
  /** Multi-line list */
  multiLine: _propTypes.bool,
  /** List items contain avatars */
  avatar: _propTypes.bool,
  /**
   * By default lists are rendered with hover, focus and press states.
   * To opt out of this set this prop to `true`
   */
  nonInteractive: _propTypes.bool
};

exports.default = List;