import React from "react";
import classnames from "classnames";
import PropTypes from "prop-types";
import {
  Dialog,
  DialogHeader,
  DialogBody,
  DialogFooter,
  DialogFooterButton
} from "@cdk-uip/react-dialog";
import MonthPickerSelect from "./MonthPickerSelect";

/**
 * Controlled month/year picker.
 *
 * If you use this component directly then you are responsible
 * for managing the state of the currently selected month/year.
 *
 * For a higher-level wrapper you can use `<MonthPicker>` instead.
 */
const MonthPickerDialog = ({
  open,
  onCancel,
  onOK,
  className,
  title,
  monthLabel,
  month,
  onChangeMonth,
  months,
  yearLabel,
  year,
  onChangeYear,
  years,
  okLabel,
  cancelLabel,
  okDisabled
}) => (
  <Dialog
    open={open}
    onCancel={onCancel}
    className={classnames("cdk-month-picker", className)}
  >
    <DialogHeader>{title}</DialogHeader>
    <DialogBody>
      <div className="cdk-month-picker--container">
        <MonthPickerSelect
          className="cdk-month-picker--month"
          label={monthLabel}
          value={month}
          onChange={onChangeMonth}
          options={months.map((label, value) => ({ label, value }))}
        />

        <MonthPickerSelect
          className="cdk-month-picker--year"
          label={yearLabel}
          value={year}
          onChange={onChangeYear}
          options={years.map(label => ({ label, value: label }))}
        />
      </div>
    </DialogBody>
    <DialogFooter>
      <DialogFooterButton onClick={onCancel}>{cancelLabel}</DialogFooterButton>
      <DialogFooterButton onClick={onOK} disabled={okDisabled}>
        {okLabel}
      </DialogFooterButton>
    </DialogFooter>
  </Dialog>
);

MonthPickerDialog.propTypes = {
  open: PropTypes.bool,
  onCancel: PropTypes.func,
  onOK: PropTypes.func,
  title: PropTypes.node,
  month: PropTypes.number,
  onChangeMonth: PropTypes.func,
  months: PropTypes.arrayOf(PropTypes.node).isRequired,
  monthLabel: PropTypes.node,
  year: PropTypes.number,
  onChangeYear: PropTypes.func,
  years: PropTypes.arrayOf(PropTypes.number).isRequired,
  yearLabel: PropTypes.node,
  cancelLabel: PropTypes.node,
  okLabel: PropTypes.node,
  okDisabled: PropTypes.bool
};

export default MonthPickerDialog;
