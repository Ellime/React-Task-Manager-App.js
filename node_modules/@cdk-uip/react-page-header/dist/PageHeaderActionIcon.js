"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _reactFluid = require("@cdk-uip/react-fluid");

var _reactIconButton = require("@cdk-uip/react-icon-button");

var _classnames = require("classnames");

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require("prop-types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * Icon button to be used within page header actions.
 */
var PageHeaderActionIcon = function PageHeaderActionIcon(_ref) {
  var className = _ref.className,
      onClick = _ref.onClick,
      children = _ref.children,
      others = _objectWithoutProperties(_ref, ["className", "onClick", "children"]);

  return _react2.default.createElement(
    _reactFluid.FluidItem,
    null,
    _react2.default.createElement(
      _reactIconButton.IconButton,
      _extends({
        className: (0, _classnames2.default)("cdk-page-header-action-button", className)
      }, others, {
        onClick: onClick
      }),
      children
    )
  );
};

PageHeaderActionIcon.propTypes = {
  /** Page header icon action custom CSS class(es) */
  className: _propTypes.string,
  /** Function that is click on ButtonIcon click */
  onClick: _propTypes.func,
  /** The name of the MDC icon that will be rendedered as an IconButton */
  children: _propTypes.node
  /** Addtionally can recieve any props that can be passed to IconButton */
};

exports.default = PageHeaderActionIcon;