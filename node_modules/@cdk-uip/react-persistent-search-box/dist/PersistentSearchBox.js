"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _reactTextField = require("@cdk-uip/react-text-field");

var _propTypes = require("prop-types");

var _debounce = require("lodash/debounce");

var _debounce2 = _interopRequireDefault(_debounce);

var _classnames = require("classnames");

var _classnames2 = _interopRequireDefault(_classnames);

var _reactIcon = require("@cdk-uip/react-icon");

var _PersistentSearchResults = require("./PersistentSearchResults");

var _PersistentSearchResults2 = _interopRequireDefault(_PersistentSearchResults);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Search box component.
 */
var PersistentSearchBox = function (_React$Component) {
  _inherits(PersistentSearchBox, _React$Component);

  function PersistentSearchBox() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, PersistentSearchBox);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PersistentSearchBox.__proto__ || Object.getPrototypeOf(PersistentSearchBox)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hasFocus: false
    }, _this.doSearch = (0, _debounce2.default)(function (value) {
      _this.props.onFetch(value);
    }, _this.props.delay || 700), _this.handleChange = function (e) {
      _this.doSearch(e.target.value);
      _this.props.onChange(e);
    }, _this.handleFocus = function () {
      _this.setState({ hasFocus: true });
    }, _this.handleBlur = function () {
      _this.setState({ hasFocus: false });
    }, _this.handleClear = function () {
      _this.props.onClear();
      _this.inputRef && _this.inputRef.focus();
    }, _this.onInputRef = function (ref) {
      _this.inputRef = ref;
      _this.props.setInputRef(ref);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(PersistentSearchBox, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          value = _props.value,
          onChange = _props.onChange,
          className = _props.className,
          label = _props.label,
          disabled = _props.disabled,
          onFetch = _props.onFetch,
          onClear = _props.onClear,
          results = _props.results,
          setInputRef = _props.setInputRef,
          onBack = _props.onBack,
          onClick = _props.onClick,
          other = _objectWithoutProperties(_props, ["value", "onChange", "className", "label", "disabled", "onFetch", "onClear", "results", "setInputRef", "onBack", "onClick"]);

      var haveResults = results.length > 0;
      return _react2.default.createElement(
        "div",
        {
          className: "cdk-persistent-search__container",
          onFocus: this.handleFocus,
          onBlur: this.handleBlur
        },
        _react2.default.createElement(
          "div",
          { className: "cdk-persistent-search__search-bar" },
          _react2.default.createElement(
            "div",
            { className: "cdk-persistent-search__back" },
            _react2.default.createElement(
              _reactIcon.Icon,
              { onClick: haveResults ? onBack : null },
              haveResults ? "arrow_back" : "search"
            )
          ),
          _react2.default.createElement(_reactTextField.TextField, _extends({
            className: (0, _classnames2.default)("persistent-search-box", className),
            value: value,
            placeholder: label,
            box: true,
            onChange: this.handleChange,
            disabled: disabled,
            boxFocus: false,
            inputRef: this.onInputRef
          }, other)),
          value && _react2.default.createElement(
            "div",
            { className: "cdk-persistent-search__cancel" },
            _react2.default.createElement(
              _reactIcon.Icon,
              {
                className: "cdk-persistent-search__cancel-icon",
                tabIndex: "0",
                onClick: this.handleClear
              },
              "cancel"
            )
          )
        ),
        haveResults && this.state.hasFocus && _react2.default.createElement(
          "div",
          { className: "cdk-persistent-search__result-container" },
          _react2.default.createElement(_PersistentSearchResults2.default, { results: results, onClick: onClick })
        )
      );
    }
  }]);

  return PersistentSearchBox;
}(_react2.default.Component);

PersistentSearchBox.propTypes = {
  /** The current search value */
  value: _propTypes.string,
  /** Called when the value changes */
  onChange: _propTypes.func,
  /** className for container div */
  className: _propTypes.string,
  /** placeholder inside the search field */
  label: _propTypes.node,
  /** help text under the search field */
  helpText: _propTypes.node,
  /** on search callback */
  onFetch: _propTypes.func.isRequired,
  /** disable the Search Field */
  disabled: _propTypes.bool,
  /** number of ms to delay the fetch call */
  delay: _propTypes.number,
  /** expose a ref to the constituent TextField */
  setInputRef: _propTypes.func,
  /** on clicking the clear button or emptying the search field */
  onClear: _propTypes.func,
  /** The most recent results to be displayed */
  results: _propTypes.array,
  /** Called when the back button is clicked */
  onBack: _propTypes.func,
  /** Called when a result is selected. Passed the text and index */
  onClick: _propTypes.func
};
PersistentSearchBox.defaultProps = {
  className: "primary",
  delay: 700,
  onChange: function onChange() {},
  onClear: function onClear() {},
  onFetch: function onFetch() {},
  onBack: function onBack() {},
  setInputRef: function setInputRef() {},
  onClick: function onClick() {},
  results: []
};
exports.default = PersistentSearchBox;