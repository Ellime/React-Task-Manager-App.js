import React from "react";
import PropTypes from "prop-types";
import { FormField } from "@cdk-uip/react-form-field";
import Radio from "./Radio";

/**
 * Used to group `<Radio>` components together.
 */
class RadioGroup extends React.Component {
  static propTypes = {
    /** The current value */
    value: PropTypes.any,
    /** The group name */
    name: PropTypes.string,
    /** Called when a new value is selected */
    onChange: PropTypes.func,
    /** Use 100% width for each button */
    fullWidth: PropTypes.bool,
    /** Disable each button in group */
    disabled: PropTypes.bool
  };

  static defaultProps = {
    fullWidth: true,
    disabled: false
  };

  render() {
    const {
      name,
      value,
      disabled,
      onChange,
      fullWidth,
      children,
      ...rest
    } = this.props;
    return (
      <div {...rest}>
        {React.Children.map(children, (child, index) => {
          const { children, ...props } = child.props;
          return (
            <FormField
              id={`${name}-${index}`}
              style={{ width: fullWidth ? "100%" : undefined }}
            >
              <Radio
                disabled={disabled}
                {...props}
                value={child.props.value}
                checked={child.props.value === value}
                name={name}
                onChange={onChange}
              />
              <label>{children}</label>
            </FormField>
          );
        })}
      </div>
    );
  }
}

export default RadioGroup;
