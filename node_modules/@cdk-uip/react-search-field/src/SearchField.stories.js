import React from "react";
import { SearchField } from ".";
import { Button } from "@cdk-uip/react-button";
import { storiesOf } from "@storybook/react";
import { action } from "@storybook/addon-actions";

class Controlled extends React.Component {
  state = { value: "" };

  render() {
    return (
      <SearchField
        value={this.state.value}
        onChange={e => this.setState({ value: e.target.value })}
        onFetch={action("onFetch")}
        {...this.props}
      />
    );
  }
}

storiesOf("search-field", module)
  .add("controlled", () => <Controlled />)
  .add("uncontrolled", () => <SearchField onFetch={action("onFetch")} />)
  .add("uncontrolled, re-rendering", () => {
    class Uncontrolled extends React.Component {
      componentDidMount() {
        this.timerId = setInterval(() => this.forceUpdate(), 1000);
      }
      componentWillUnmount() {
        clearInterval(this.timerId);
      }
      render() {
        return <SearchField />;
      }
    }
    return <Uncontrolled />;
  })
  .add("full width", () => <Controlled fullWidth />)
  .add("disabled", () => <Controlled disabled />)
  .add("initially expanded", () => <SearchField expanded />)
  .add("toggle expanded", () => {
    class Toggle extends React.Component {
      state = { expanded: false };

      render() {
        return (
          <div>
            <SearchField expanded={this.state.expanded} />
            <Button
              onClick={() =>
                this.setState(prevState => ({ expanded: !prevState.expanded }))
              }
            >
              Toggle
            </Button>
          </div>
        );
      }
    }
    return <Toggle />;
  });
