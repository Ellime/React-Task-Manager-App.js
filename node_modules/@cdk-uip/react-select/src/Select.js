import React from "react";
import classnames from "classnames";
import { any, bool, func, node } from "prop-types";

export default class Select extends React.Component {
  static propTypes = {
    /** The currently selected value. */
    value: any,
    /** The label. */
    label: node,
    /** Called when the selection has changed. */
    onChange: func,
    /** Disable the select */
    disabled: bool,
    /** Use a full-width select */
    fullWidth: bool,
    /** Styles the select as a box select */
    box: bool,
    /** Allow an empty value to be selected */
    allowEmpty: bool,
    /** Render as invalid */
    invalid: bool,
    /** Mark Select as required */
    required: bool
  };

  state = { hasFocus: false };

  onFocus = () => {
    this.setState({ hasFocus: true });
  };

  onBlur = () => {
    this.setState({ hasFocus: false });
  };

  render() {
    const {
      className,
      label,
      disabled,
      fullWidth,
      children,
      value,
      box,
      allowEmpty,
      invalid,
      textField, // legacy prop
      native, // legacy prop
      required,
      ...other
    } = this.props;

    return (
      <div
        className={classnames(
          "mdc-select",
          {
            "mdc-select--full-width": fullWidth,
            "mdc-select--disabled": disabled,
            "mdc-select--box": box,
            "mdc-select--invalid": invalid
          },
          className
        )}
      >
        <select
          className={classnames(
            "mdc-select__native-control",
            {
              "mdc-select--invalid": invalid
            },
            className
          )}
          value={value || ""}
          disabled={disabled}
          onFocus={this.onFocus}
          onBlur={this.onBlur}
          required={required}
          {...other}
        >
          <option value="" disabled={!allowEmpty} />
          {children}
        </select>
        <label
          className={classnames("mdc-floating-label", {
            "mdc-floating-label--float-above": value
          })}
        >
          {label}
          {required && "*"}
        </label>
        <div
          className={classnames("mdc-line-ripple", {
            "mdc-line-ripple--active": this.state.hasFocus
          })}
        />
      </div>
    );
  }
}
