import React from "react";
import TestUtils from "react-dom/test-utils";
import { Select } from ".";
import renderer from "react-test-renderer";

class SelectExample extends React.Component {
  render() {
    return (
      <Select label="Pick a food" {...this.props}>
        <option value="grains">Bread, Cereal, Rice, and Pasta</option>
        <option value="vegetables">Vegetables</option>
        <option value="dairy">Milk, Yogurt, and Cheese</option>
        <option value="meat">
          Meat, Poultry, Fish, Dry Beans, Eggs, and Nuts
        </option>
        <option value="fats">Fats, Oils, and Sweets</option>
      </Select>
    );
  }
}

it("renders", () => {
  expect(renderer.create(<SelectExample />)).toMatchSnapshot();
});

it("renders with a box", () => {
  expect(renderer.create(<SelectExample box />)).toMatchSnapshot();
});

it("renders with a selectable initial value", () => {
  expect(renderer.create(<SelectExample allowEmpty />)).toMatchSnapshot();
});

it("renders as required", () => {
  expect(renderer.create(<SelectExample required />)).toMatchSnapshot();
});

it("renders the line ripple on focus", () => {
  const component = TestUtils.renderIntoDocument(<SelectExample />);
  const select = TestUtils.findRenderedDOMComponentWithTag(component, "select");
  const ripple = TestUtils.findRenderedDOMComponentWithClass(
    component,
    "mdc-line-ripple"
  );

  // Simulate focus
  TestUtils.Simulate.focus(select);
  expect(ripple.classList.contains("mdc-line-ripple--active")).toBe(true);

  // Simulate blur
  TestUtils.Simulate.blur(select);
  expect(ripple.classList.contains("mdc-line-ripple--active")).toBe(false);
});
