"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _classnames = require("classnames");

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require("prop-types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * Controlled snackbar component.
 */
var Snackbar = function Snackbar(_ref) {
  var show = _ref.show,
      alignStart = _ref.alignStart,
      message = _ref.message,
      onAction = _ref.onAction,
      actionText = _ref.actionText,
      multiline = _ref.multiline,
      actionOnBottom = _ref.actionOnBottom,
      className = _ref.className,
      other = _objectWithoutProperties(_ref, ["show", "alignStart", "message", "onAction", "actionText", "multiline", "actionOnBottom", "className"]);

  return _react2.default.createElement(
    "div",
    _extends({
      className: (0, _classnames2.default)("mdc-snackbar", {
        "mdc-snackbar--active": show,
        "mdc-snackbar--align-start": alignStart,
        "mdc-snackbar--multiline": multiline,
        "mdc-snackbar--action-on-bottom": actionOnBottom
      }, className),
      "aria-live": "assertive",
      "aria-atomic": "true",
      "aria-hidden": "true"
    }, other),
    _react2.default.createElement(
      "div",
      { className: "mdc-snackbar__text" },
      message
    ),
    actionText && _react2.default.createElement(
      "div",
      { className: "mdc-snackbar__action-wrapper" },
      _react2.default.createElement(
        "button",
        {
          type: "button",
          className: "mdc-snackbar__action-button",
          onClick: onAction
        },
        actionText
      )
    )
  );
};

Snackbar.propTypes = {
  /** Show the snackbar. */
  show: _propTypes.bool.isRequired,
  /** Align to start of screen (tablet and desktop only). */
  alignStart: _propTypes.bool,
  /** The text message to display. */
  message: _propTypes.node,
  /** Called when the action button is clicked. */
  onAction: _propTypes.func,
  /** The text to display for the action button. */
  actionText: _propTypes.node,
  /** Whether to show the snackbar with space for multiple lines of text. */
  multiline: _propTypes.bool,
  /** Whether to show the action below the multiple lines of text. */
  actionOnBottom: _propTypes.bool
};

exports.default = Snackbar;