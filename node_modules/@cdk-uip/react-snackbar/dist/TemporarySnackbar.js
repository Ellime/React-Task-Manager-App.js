"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _Snackbar = require("./Snackbar");

var _Snackbar2 = _interopRequireDefault(_Snackbar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Used to show a snackbar that is only visible for a specified duratiom.
 */
var TemporarySnackbar = function (_Component) {
  _inherits(TemporarySnackbar, _Component);

  function TemporarySnackbar() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, TemporarySnackbar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TemporarySnackbar.__proto__ || Object.getPrototypeOf(TemporarySnackbar)).call.apply(_ref, [this].concat(args))), _this), _this.state = { show: false }, _this.onAction = function () {
      clearTimeout(_this.timer);
      _this.setState({ show: false }, function () {
        return _this.props.onAction();
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(TemporarySnackbar, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.update();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (prevProps.show !== this.props.show) {
        this.update();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      clearTimeout(this.timer);
    }
  }, {
    key: "update",
    value: function update() {
      var _this2 = this;

      if (this.props.show) {
        this.setState({ show: true }, function () {
          _this2.timer = setTimeout(function () {
            _this2.setState({ show: false }, function () {
              _this2.props.onClose();
            });
          }, _this2.props.timeout);
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          show = _props.show,
          onAction = _props.onAction,
          other = _objectWithoutProperties(_props, ["show", "onAction"]);

      return _react2.default.createElement(_Snackbar2.default, _extends({ show: this.state.show, onAction: this.onAction }, other));
    }
  }]);

  return TemporarySnackbar;
}(_react.Component);

TemporarySnackbar.propTypes = {
  /** Timeout duration in ms */
  timeout: _propTypes.number,
  /** Called when the snackbar closes */
  onClose: _propTypes.func,
  /** Called when the snackbar is actioned */
  onAction: _propTypes.func
};
TemporarySnackbar.defaultProps = {
  timeout: 2750,
  onClose: function onClose() {},
  onAction: function onAction() {}
};
exports.default = TemporarySnackbar;