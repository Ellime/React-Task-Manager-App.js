"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _classnames = require("classnames");

var _classnames2 = _interopRequireDefault(_classnames);

var _reactFab = require("@cdk-uip/react-fab");

var _propTypes = require("prop-types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Used to create a popup group of mini buttons.
 */
var SpeedDial = function (_React$Component) {
  _inherits(SpeedDial, _React$Component);

  function SpeedDial() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, SpeedDial);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SpeedDial.__proto__ || Object.getPrototypeOf(SpeedDial)).call.apply(_ref, [this].concat(args))), _this), _this.state = { open: false }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(SpeedDial, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          className = _props.className,
          icon = _props.icon,
          children = _props.children,
          other = _objectWithoutProperties(_props, ["className", "icon", "children"]);

      return _react2.default.createElement(
        "div",
        _extends({
          className: (0, _classnames2.default)("cdk-speed-dial", "cdk-speed-dial--fixed", className)
        }, other),
        this.state.open && _react2.default.createElement("div", {
          className: "cdk-speed-dial__backdrop",
          onClick: function onClick() {
            return _this2.setState({ open: false });
          }
        }),
        _react2.default.createElement(
          "div",
          { className: "cdk-speed-dial__container" },
          _react2.default.createElement(
            "ul",
            null,
            _react2.default.Children.map(children, function (child, index) {
              return _react2.default.cloneElement(child, {
                exited: !_this2.state.open,
                onClick: function onClick(e) {
                  if (_this2.state.open) {
                    _this2.setState({ open: false });
                    child.props.onClick && child.props.onClick(e);
                  }
                }
              });
            })
          ),
          _react2.default.createElement(
            _reactFab.FAB,
            {
              onClick: function onClick() {
                _this2.setState(function (prevState) {
                  return {
                    open: !prevState.open
                  };
                });
              }
            },
            this.state.open ? "close" : icon
          )
        )
      );
    }
  }]);

  return SpeedDial;
}(_react2.default.Component);

SpeedDial.propTypes = {
  /** Icon to display when the menu is closed */
  icon: _propTypes.string.isRequired
};
exports.default = SpeedDial;