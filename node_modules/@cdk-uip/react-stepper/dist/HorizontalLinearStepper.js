"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _ = require(".");

var _propTypes = require("prop-types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * A horizontal linear stepper.
 *
 * Linear steppers require users to complete one step in order to move on to the next.
 * This component allows you to supply an array of step labels, the currently active
 * step and a finished flag.
 *
 * Note that you need to supply your own suitable back/next/finish buttons.
 */
var HorizontalLinearStepper = function HorizontalLinearStepper(_ref) {
  var steps = _ref.steps,
      activeStep = _ref.activeStep,
      finished = _ref.finished,
      other = _objectWithoutProperties(_ref, ["steps", "activeStep", "finished"]);

  return _react2.default.createElement(
    _.Stepper,
    other,
    steps.map(function (step, index) {
      return [_react2.default.createElement(
        _.Step,
        { key: index, inactive: index > activeStep },
        finished || activeStep > index ? _react2.default.createElement(_.StepIconCompleted, null) : _react2.default.createElement(
          _.StepIcon,
          null,
          index + 1
        ),
        _react2.default.createElement(
          _.StepLabel,
          null,
          step
        )
      ), index < steps.length - 1 ? _react2.default.createElement(_.StepDivider, { key: "divider-" + index }) : null];
    })
  );
};

HorizontalLinearStepper.propTypes = {
  /**
   * An array of steps. You can use string or React components
   * (such as the `react-intl` `FormattedMessage` component.)
   */
  steps: (0, _propTypes.arrayOf)(_propTypes.node).isRequired,
  /**
   * The index of the currently active step.
   */
  activeStep: _propTypes.number.isRequired,
  /**
   * Enable this prop to show all steps as completeed.
   */
  finished: _propTypes.bool
};

exports.default = HorizontalLinearStepper;