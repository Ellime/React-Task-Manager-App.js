"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _classnames = require("classnames");

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * Used to indicate the step number, completed or editable status.
 *
 * To display a number, pass the value as the child, e.g.:
 *
 * ```js
 * <StepIcon>2</StepIcon>
 * ```
 *
 * To display an icon you can use the `<Icon>` component:
 *
 * ```js
 * <StepIcon>
 *   <Icon>warning</Icon>
 * </StepIcon>
 * ```
 *
 * - To display a checkbox (for completed steps) you can use the `<StepIconCompleted>` component.
 * - To display an edit icon (for editable steps) you can use the `<StepIconEditable>` component.
 *
 */
var StepIcon = function StepIcon(_ref) {
  var className = _ref.className,
      children = _ref.children,
      other = _objectWithoutProperties(_ref, ["className", "children"]);

  return _react2.default.createElement(
    "div",
    _extends({ className: (0, _classnames2.default)("cdk-stepper__step__icon", className) }, other),
    children
  );
};

exports.default = StepIcon;