"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _TabBar = require("./TabBar");

var _TabBar2 = _interopRequireDefault(_TabBar);

var _propTypes = require("prop-types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * Use when you want to store values against each tab instead of using
 * indexes. Similar to the `<RadioGroup>` component.
 */
var Tabs = function Tabs(_ref) {
  var className = _ref.className,
      icon = _ref.icon,
      iconsWithText = _ref.iconsWithText,
      scroll = _ref.scroll,
      onChange = _ref.onChange,
      children = _ref.children,
      other = _objectWithoutProperties(_ref, ["className", "icon", "iconsWithText", "scroll", "onChange", "children"]);

  return _react2.default.createElement(
    _TabBar2.default,
    {
      className: className,
      icons: icon,
      iconsWithText: iconsWithText,
      scroll: scroll
    },
    _react.Children.toArray(children).map(function (child, index) {
      var value = child.props.value;

      return (0, _react.cloneElement)(child, {
        active: typeof value !== "undefined" && value === other.value,
        iconAndText: iconsWithText,
        onClick: function onClick() {
          return onChange(value);
        }
      });
    })
  );
};

Tabs.propTypes = {
  /** Currently selected tab value */
  value: _propTypes.any,
  /** Called when the active tab changes. Passed the new active index. */
  onChange: _propTypes.func,
  /** Icon-only tabs */
  icon: _propTypes.bool,
  /** Tabs with icons and text */
  iconsWithText: _propTypes.bool,
  /** Scrolling support */
  scroll: _propTypes.bool
};

Tabs.defaultProps = {
  onChange: function onChange() {}
};

exports.default = Tabs;