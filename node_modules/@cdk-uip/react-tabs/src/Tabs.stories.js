import React from "react";
import { Tabs, Tab, TabIcon, TabText, TabBar } from ".";
import {
  Toolbar,
  ToolbarRow,
  ToolbarSection,
  ToolbarIcon,
  ToolbarTitle
} from "@cdk-uip/react-toolbar";
import { Button } from "@cdk-uip/react-button";
import { storiesOf } from "@storybook/react";
import { withKnobs, select, text, number } from "@storybook/addon-knobs";

storiesOf("tabs", module)
  .addDecorator(withKnobs)
  .add("props", () => {
    class Wrapper extends React.Component {
      state = { value: this.props.initalActiveTab };
      render() {
        const data = [
          {
            value: 0,
            label: "Item One",
            icon: "phone"
          },
          {
            value: "2",
            label: "Item Two",
            icon: "favorite"
          },
          {
            value: "3",
            label: "3",
            icon: "account_circle"
          }
        ];

        const type = select(
          "Type",
          ["Text", "Icons", "Icons With Text"],
          "Text"
        );

        return (
          <div>
            <Tabs
              value={this.state.value}
              onChange={value => this.setState({ value })}
              icon={type === "Icons"}
              iconsWithText={type === "Icons With Text"}
            >
              {data.map(({ value, label, icon }) => (
                <Tab key={value} value={value}>
                  {(type === "Icons" || type === "Icons With Text") && (
                    <TabIcon>{icon}</TabIcon>
                  )}
                  {(type === "Text" || type === "Icons With Text") && (
                    <TabText>{label}</TabText>
                  )}
                </Tab>
              ))}
            </Tabs>
            <p>Active: {this.state.value}</p>
          </div>
        );
      }
    }
    return <Wrapper initalActiveTab={text("Inital active value", "1")} />;
  })
  .add("Tabs in toolbar", () => (
    <Toolbar>
      <ToolbarRow>
        <ToolbarSection align="start">
          <ToolbarIcon menu />
          <ToolbarTitle>Toolbar</ToolbarTitle>
        </ToolbarSection>
        <ToolbarSection align="end" shrinkToFit>
          <ToolbarIcon>file_download</ToolbarIcon>
          <ToolbarIcon>print</ToolbarIcon>
          <ToolbarIcon>bookmark</ToolbarIcon>
        </ToolbarSection>
      </ToolbarRow>
      <ToolbarRow>
        <ToolbarSection align="start">
          <TabBar>
            <Tab active>Item one</Tab>
            <Tab>Item two</Tab>
            <Tab>3</Tab>
          </TabBar>
        </ToolbarSection>
      </ToolbarRow>
    </Toolbar>
  ))
  .add("changing active tab programmatically", () => {
    class Wrapper extends React.Component {
      state = { value: "1" };

      render() {
        return (
          <div>
            <Tabs
              value={this.state.value}
              onChange={value => this.setState({ value })}
            >
              <Tab value="1">Item one</Tab>
              <Tab value="2">Item two</Tab>
              <Tab value="3">3</Tab>
            </Tabs>

            <Button onClick={() => this.setState({ value: "1" })}>1</Button>
            <Button onClick={() => this.setState({ value: "2" })}>2</Button>
            <Button onClick={() => this.setState({ value: "3" })}>3</Button>
          </div>
        );
      }
    }
    return <Wrapper />;
  })
  .add("with custom tab components", () => {
    const CustomTab = ({ children, active, iconAndText, ...other }) => (
      <a {...other} className={`mdc-tab ${active ? "mdc-tab--active" : ""}`}>
        {children}
        <span className="mdc-tab__indicator" />
      </a>
    );

    class Wrapper extends React.Component {
      state = { value: "2" };

      render() {
        return (
          <div>
            <Tabs
              value={this.state.value}
              onChange={value => this.setState({ value })}
            >
              <CustomTab value="1">Item one</CustomTab>
              <CustomTab value="2">Item two</CustomTab>
              <CustomTab value="3">Custom Tab</CustomTab>
            </Tabs>
            <p>Active: {this.state.value}</p>
          </div>
        );
      }
    }

    return <Wrapper />;
  })
  .add("tab bar", () => {
    class Wrapper extends React.Component {
      state = { index: this.props.index };
      render() {
        const data = [
          {
            value: "1",
            label: "Item One",
            icon: "phone"
          },
          {
            value: "2",
            label: "Item Two",
            icon: "favorite"
          },
          {
            value: "3",
            label: "3",
            icon: "account_circle"
          }
        ];

        const type = select(
          "Type",
          ["Text", "Icons", "Icons With Text"],
          "Text"
        );

        return (
          <div>
            <TabBar
              icons={type === "Icons"}
              iconsWithText={type === "Icons With Text"}
            >
              {data.map(({ label, icon }, index) => (
                <Tab
                  key={index}
                  iconAndText={type === "Icons With Text"}
                  active={index === this.state.index}
                  onClick={() => this.setState({ index })}
                >
                  {(type === "Icons" || type === "Icons With Text") && (
                    <TabIcon>{icon}</TabIcon>
                  )}
                  {(type === "Text" || type === "Icons With Text") && (
                    <TabText>{label}</TabText>
                  )}
                </Tab>
              ))}
            </TabBar>
            <p>Active: {this.state.index}</p>
          </div>
        );
      }
    }
    return <Wrapper index={number("Initial index", 0)} />;
  });
