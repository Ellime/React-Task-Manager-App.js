import React from "react";
import classnames from "classnames";
import { bool, func, node, string } from "prop-types";

/**
 * Multi-line text field that wraps a HTML `<textarea>` element.
 */
export default class TextArea extends React.Component {
  static propTypes = {
    /** The text area value */
    value: string,
    /** Called when the value changes */
    onChange: func,
    /** The component ID */
    id: string,
    /** The label text */
    label: node,
    /** Disabled */
    disabled: bool,
    /** Full width */
    fullWidth: bool,
    /** For a more compact version */
    dense: bool,
    /** Display as invalid */
    invalid: bool
  };

  state = { hasFocus: false, isValid: true };

  onFocus = () => {
    this.setState({ hasFocus: true });
  };

  onBlur = e => {
    this.setState({ hasFocus: false, isValid: e.target.validity.valid });
  };

  render() {
    const {
      id,
      className,
      label,
      fullWidth,
      dense,
      invalid,
      value,
      disabled,
      ...other
    } = this.props;
    const { hasFocus, isValid } = this.state;
    return (
      <label
        className={classnames(
          "mdc-text-field",
          "mdc-text-field--textarea",
          "mdc-text-field--upgraded",
          {
            "mdc-text-field--focused": hasFocus,
            "mdc-text-field--invalid": invalid || !isValid,
            "mdc-text-field--block": fullWidth,
            "mdc-text-field--dense": dense,
            "mdc-text-field--disabled": disabled
          },
          className
        )}
      >
        <textarea
          className="mdc-text-field__input"
          onFocus={this.onFocus}
          onBlur={this.onBlur}
          id={id}
          value={value}
          disabled={disabled}
          {...other}
        />

        {label && (
          <span
            className={classnames("mdc-floating-label", {
              "mdc-floating-label--float-above": hasFocus || value
            })}
          >
            {label}
          </span>
        )}
      </label>
    );
  }
}
