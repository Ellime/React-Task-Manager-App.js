"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _classnames = require("classnames");

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require("prop-types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * Used to provide helper text to a `<TextField>` component.
 */
var TextFieldHelperText = function TextFieldHelperText(_ref) {
  var persistent = _ref.persistent,
      validation = _ref.validation,
      className = _ref.className,
      children = _ref.children,
      other = _objectWithoutProperties(_ref, ["persistent", "validation", "className", "children"]);

  return _react2.default.createElement(
    "p",
    _extends({
      className: (0, _classnames2.default)("mdc-text-field-helper-text", {
        "mdc-text-field-helper-text--persistent": persistent,
        "mdc-text-field-helper-text--validation-msg": validation
      }, className),
      "aria-hidden": "true"
    }, other),
    children
  );
};

TextFieldHelperText.propTypes = {
  /** Ensure the helper text is always visible. */
  persistent: _propTypes.bool,
  /** Use helper text to provide validation messages. */
  validation: _propTypes.bool
};

exports.default = TextFieldHelperText;