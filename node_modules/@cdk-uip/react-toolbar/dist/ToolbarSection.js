"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _classnames = require("classnames");

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require("prop-types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Used to split a `ToolbarRow` into sections.
 *
 * Use sections to layout the content of each toolbar row. For example,
 * to have a menu button, a start-aligned caption that takes up as much
 * available space as possible, and two end-aligned icons you can do
 * something like this:
 *
 * ```js
 * <Toolbar>
 *  <ToolbarRow>
 *    <ToolbarSection align="start">
 *      <ToolbarIcon menu />
 *      <ToolbarTitle>Caption</ToolbarTitle>
 *    </ToolbarSection>
 *    <ToolbarSection align="end" shrinkToFit>
 *      <ToolbarIcon>print</ToolbarIcon>
 *      <ToolbarIcon>bookmark</ToolbarIcon>
 *    </ToolbarSection>
 *  </ToolbarRow>
 * </Toolbar>
 * ```
 */
var ToolbarSection = function ToolbarSection(_ref) {
  var className = _ref.className,
      align = _ref.align,
      shrinkToFit = _ref.shrinkToFit,
      children = _ref.children;
  return _react2.default.createElement(
    "section",
    {
      className: (0, _classnames2.default)("mdc-toolbar__section", {
        "mdc-toolbar__section--align-start": align === "start",
        "mdc-toolbar__section--align-end": align === "end",
        "mdc-toolbar__section--shrink-to-fit": shrinkToFit
      }, className)
    },
    children
  );
};

ToolbarSection.propTypes = {
  /** Content alignment */
  align: (0, _propTypes.oneOf)(["start", "end"]),
  /** Shrink the section width to use only the space required */
  shrinkToFit: _propTypes.bool
};

exports.default = ToolbarSection;