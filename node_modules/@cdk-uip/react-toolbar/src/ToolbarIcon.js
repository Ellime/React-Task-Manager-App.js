import React from "react";
import classnames from "classnames";
import { Icon } from "@cdk-uip/react-icon";
import { bool, string } from "prop-types";

/**
 * Toolbar icon.
 *
 * Specify the icon to use as the child element, e.g.:
 *
 * ```js
 * <ToolbarIcon>favorite</ToolbarIcon>
 * ```
 *
 * If this is the first icon in a toolbar (usually the menu icon) then
 * specify the `menu` prop to add the required padding:
 *
 * ```js
 * <ToolbarIcon menu>home</ToolbarIcon>
 * ```
 *
 * If you want to display the actual menu icon then you can use the following
 * shortcut:
 *
 * ```js
 * <ToolbarIcon menu />
 * ```
 *
 * To make the icon clickable use the `href` prop or render as a button using
 * the `element` prop and include an `onClick` handler.
 */
const ToolbarIcon = ({ element, className, menu, children, ...other }) => {
  const T = element;
  return (
    <T
      className={classnames(
        {
          "mdc-toolbar__menu-icon": menu,
          "mdc-toolbar__icon": !menu
        },
        className
      )}
      {...other}
    >
      <Icon aria-hidden="true">{children}</Icon>
    </T>
  );
};

ToolbarIcon.propTypes = {
  /** Element type ("a", "button", etc.) */
  element: string,
  /** Custom class */
  className: string,
  /** Left-most icon (usually a menu toggle) */
  menu: bool,
  /** Icon name */
  children: string
};

ToolbarIcon.defaultProps = {
  element: "a",
  children: "menu"
};

export default ToolbarIcon;
