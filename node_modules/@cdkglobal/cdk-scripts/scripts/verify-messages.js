"use strict";

// Check for missing translations

const chalk = require("chalk");
const fs = require("fs-extra");
const globSync = require("glob").sync;
const path = require("path");
const paths = require("../config/paths");

const messagesDir = paths.appLocales;

const defaultLocaleFile = path.join(messagesDir, "en.json");

console.log(
  "Loading default messages from '" + chalk.cyan(defaultLocaleFile) + "'..."
);

const loadMessages = filename => JSON.parse(fs.readFileSync(filename, "utf8"));

const defaultData = loadMessages(defaultLocaleFile);

// look for files matching src/i18n/xx[-yy].json
globSync(path.join(messagesDir, "??*(-??).json")).forEach(file => {
  if (!path.relative(file, defaultLocaleFile)) {
    // pointless comparing the default file to itself
    return;
  }
  console.log("Comparing '" + chalk.cyan(file) + "' to default messages...");

  const howtofix = "Please 'npm run extract-messages && npm run refresh-messages' and try again.";

  const data = loadMessages(file);
  // scan for missing ids
  Object.getOwnPropertyNames(defaultData).forEach(id => {
    if (!data.hasOwnProperty(id)) {
      throw new Error(`Missing message id: '${id}' in '${file}'. ${howtofix}`);
    }
  });
  // scan for obsolete ids
  Object.getOwnPropertyNames(data).forEach(id => {
    if (!defaultData.hasOwnProperty(id)) {
      // Don't fail the build, too strict with PR branches / @cdkglobal packages
      // throw new Error(`Obsolete message id: '${id}' in '${file}'. ${howtofix}`);
      console.warn(chalk.yellow(`Obsolete message id: '${id}' in '${file}'.`));
    }
  });
  // TODO: scan for modified ids
});

console.log(chalk.green("Completed successfully.\n"));
