import PropTypes from 'prop-types';
import defaultLocaleData from 'react-intl/locale-data/en';

const removeRegion = locale => locale && locale.toLowerCase().split(/[_-]+/)[0];

const load = spec => {
  if (typeof spec === 'function') {
    return spec().catch(e => console.error(e));
  }
  return Promise.resolve(spec);
};

export const loadLocaleData = (localeData, code) => {
  return load(localeData[removeRegion(code)] || defaultLocaleData);
};

export const loadMessages = (messages, code) => {
  return load(messages[removeRegion(code)] || []);
};

const navigatorLanguage = (navigator.languages && navigator.languages[0]) ||
  navigator.language ||
  navigator.userLanguage ||
  'en-gb';

export const language = removeRegion(navigatorLanguage);
export const locale = navigatorLanguage;

export const localeDataShape = PropTypes.objectOf(
  /** Locale data object from `react-intl/locale-data/nn`, or a function returning a promise */
  PropTypes.oneOf([PropTypes.object, PropTypes.func]).isRequired
);

export const messagesShape = PropTypes.objectOf(
  /** Hash of `react-intl` messages, or a function returning a promise */
  PropTypes.oneOf([PropTypes.object, PropTypes.func]).isRequired
);
